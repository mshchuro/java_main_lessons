package telran.lesson4;

import java.util.Arrays;

/*
Инкапсуляция - сокрытие данных и предоставление дорступа к ним через api
Наследование - создание нового класса на основе уже существуиющего,
с полностью или частично заимстованной функциональностью
Абстракция - выделение важных свойств и отбрасывание второстепенных
(абстрактный класс и интерфейс)
Полиморфизм - "множество форм при единой реализации", Работа с различными объектами
через их общие методы, без знания и понимания о внутренней структуре объекта

 Частные случаи полиморфизма
 Статический полиморфизм, или полиморфизм времени компиляции, перегрузка
 Динамический полиморфизм, или полиморфизм времени выполнения
 */
public class PolyStaticExample {

    public static void main(String[] args) {
        Calculator calculator = new Calculator();
        //На этапе компиляции будет точно определено, какой конкретно метод
        //будет вызван, определяется на основе количества и типа параметров
        //передаваемых в метод
        System.out.println("Sum " + calculator.sum(5, 7));
        System.out.println("Sum " + calculator.sum(5, 6, 8));
        System.out.println("Sum " + calculator.sum(5.6, 7.5));

        int[] ints = {1, 2, 3};
        String[] strings = {"One", "Two"};
        System.out.println(Arrays.toString(ints));
        System.out.println(Arrays.toString(strings));
    }
}